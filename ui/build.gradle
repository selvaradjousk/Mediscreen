buildscript {
    repositories {
    	// Maven Central for resolving dependencies
        mavenCentral()
            flatDir {
        dirs 'libs'
    }
    }
    dependencies {
    	// https://plugins.gradle.org/plugin/org.springframework.boot
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.6.2")
    }
}

// https://docs.gradle.org/current/samples/sample_building_java_libraries.html

plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id "jacoco"
//	id 'war'
//	id 'jar'
		// Apply the java-library plugin for API and implementation separation
    id 'java-library'
    id 'maven-publish'
}

/*
bootWar {
    baseName = 'patient'
    version =  '1.0.0'
}*/

bootJar {
    baseName = 'ui'
    version =  '1.0.0'
}

group = 'com.mediscreen.ui'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	set('springCloudVersion', "2021.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.webjars:jquery:3.6.0'
	implementation 'org.webjars:bootstrap:4.0.0-2'
//	implementation 'org.webjars:jquery-slim:3.0.0'




	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Lombok
	compileOnly 'org.projectlombok:lombok'

	// Live dev tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'


	annotationProcessor 'org.projectlombok:lombok'



//	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }


	testImplementation("org.junit.platform:junit-platform-launcher:1.2.0")
//    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.7.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.7.2')

	testCompileOnly 'junit:junit:4.12' 
//	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
    
    // Use JUnit Jupiter for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'



}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
    useJUnitPlatform() {
    includeEngines 'junit-jupiter'
    }
    
}


// Jacoco
jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
