version: '3.3'

services:

# MySQL
  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    volumes:
      - "./docker_db/mysql/db_prod.sql:/docker-entrypoint-initdb.d/0_init\
        .sql"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_USER: mediuser
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mediscreendb
    ports:
      - 3306:3306
    networks:
      - web-server
    restart: always

# patient microservice
  patient:
    image: patient
    container_name: patient
    build:
      context: ./patient/
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/mediscreendb?serverTimezone=Europe/Paris
      - SPRING_DATASOURCE_USERNAME=mediuser
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - web-server
    depends_on:
      - mysql_db
    restart: always

# ui service - frontend
  ui:
    image: ui
    container_name: ui
    build:
      context: ./ui/
      dockerfile: Dockerfile
    environment:
      - PROXY_PATIENT=http://patient:8081/patient
      - PROXY_NOTE=http://note:8082/note
      - PROXY_ASSESS=http://assess:8083/assess
    ports:
      - 8080:8080
    networks:
      - web-server
    restart: always

# MongoDB
  mongodb:
    image: mongo
    hostname: mongodb
    container_name: mongodb
    ports:
      - 27017:27017
    
    volumes:
      - ./docker_db/mongodb/mongod.conf:/etc/mongod.conf
     # - ./docker_db/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./docker_db/mongodb/data/db/:/data/db/
     # - ./docker_db/mongodb/data/log/:/var/log/mongodb/
    #environment:
     # MONGO_INITDB_ROOT_USERNAME: root
     # MONGO_INITDB_ROOT_PASSWORD: password
    #command: ["-f", "/etc/mongod.conf"]  
    networks:
      - web-server
    restart: always

# MongoDB - Data
  #mongodb_data:
   # image: mongo
    #container_name: mongodb_data
    #volumes:
      #- ./docker_db/mongodb/init/:/src/data/
    #command: ./src/data/import.sh 
    #depends_on:
      #- mongodb
   # networks:
     # - web-server   



# patient history microservice
  patientHistory:
    image: note
    container_name: note
    build:
      context: ./patientHistory/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
    ports:
      - 8082:8082
    networks:
      - web-server
    depends_on:
      - mongodb
    restart: always

# patient assessment report Microservice
  patientAssessment:
    image: assess
    container_name: assess
    build:
      context: ./patientAssessment/
      dockerfile: Dockerfile
    environment:
      - PROXY_PATIENT=http://patient:8081/patient
      - PROXY_NOTE=http://note:8082/note
    ports:
      - 8083:8083
    networks:
      - web-server
    restart: always
   
  frontend-angular:
    image: frontend-angular
    container_name: frontend-angular
    build:
      context: ./frontend-angular/
      dockerfile: Dockerfile
    #command: sh -c "npm start"
    #environment:
      #- apiUrlPatient=http://patient:8081/patient
      #- apiUrlNote=http://note:8082/note
      #- apiUrlReport=http://assess:8083/assess
    ports:
      - 4200:4200
    networks:
      - web-server
    restart: always



networks:
  web-server:
    driver: bridge
